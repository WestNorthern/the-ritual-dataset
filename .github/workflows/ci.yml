name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true
    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # no cache here; setup-node only
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # activate pnpm from package.json's "packageManager": "pnpm@9.x"
      - name: Enable Corepack & activate pnpm
        run: |
          corepack enable
          PM=$(node -p "require('./package.json').packageManager")
          echo "Using $PM"
          corepack prepare "$PM" --activate
          pnpm -v
          which pnpm

      # optional: cache the pnpm store (works only AFTER pnpm exists)
      - name: Resolve pnpm store path
        id: pnpm-cache-path
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-path.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install (workspace)
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        run: pnpm -r typecheck

      - name: Lint
        run: pnpm -r lint

      - name: Format check
        run: pnpm -r format:check

      - name: Test
        run: pnpm -r test

      - name: Build (smoke)
        run: pnpm -r build
